name: Build and Push Wire Utility Tool

on:
  push:
    branches:
      - main
    tags:
      - 'v*'      # Keep existing tag pattern for utility tool
    paths:
      - 'Dockerfile.utility'
      - 'scripts/entrypoint.py'
      - 'scripts/es-debug.py'
      - '.github/workflows/build-and-push.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'Dockerfile.utility'
      - 'scripts/entrypoint.py'
      - 'scripts/es-debug.py'
      - '.github/workflows/build-and-push.yml'

env:
  REGISTRY: quay.io
  IMAGE_NAME: wire/wire-utility-tool

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    # Skip if commit message contains [skip utility]
    if: "!contains(github.event.head_commit.message, '[skip utility]')"
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build test image (single platform)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.utility
          platforms: linux/amd64
          push: false
          load: true
          tags: test-image:latest
          cache-from: type=gha,scope=utility-test

      - name: Test image
        run: |
          echo "Testing image: test-image:latest"
          
          # Test basic tools with correct shell path
          docker run --rm --platform linux/amd64 test-image:latest python3 -c "
            import subprocess
            import sys
            print('Testing tools installation...')
            print('Python 3:', sys.version)
          "
          
          docker run --rm --platform linux/amd64 --entrypoint="" test-image:latest /bin/bash -c "
            echo 'Testing tools installation...' &&
            python3 --version &&
            python2 --version &&
            mc --version &&
            psql --version &&
            redis-cli --version &&
            cqlsh --version &&
            rabbitmqadmin --version &&
            echo 'All tools working correctly!'
          "
          
          # Test new es alias functionality
          echo 'Testing es alias functionality...'
          docker run --rm --platform linux/amd64 --entrypoint="" test-image:latest /bin/bash -c "
            echo 'Testing es command...' &&
            es usages &&
            echo 'Testing status command...' &&
            which status &&
            echo 'ES alias and status symlinks working!'
          "

      - name: Build and push utility image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.utility
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=utility
          cache-to: type=gha,mode=max,scope=utility

      - name: Build utility image (PR - no push)
        if: github.event_name == 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.utility
          platforms: linux/amd64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=utility
          cache-to: type=gha,mode=max,scope=utility
