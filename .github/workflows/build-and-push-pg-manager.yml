name: Build and Push PostgreSQL Endpoint Manager

on:
  push:
    branches:
      - main
    tags:
      - 'pg-v*'
    paths:
      - 'Dockerfile.postgres-endpoint-manager'
      - 'scripts/postgres-endpoint-manager.py'
      - '.github/workflows/build-and-push-pg-manager.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'Dockerfile.postgres-endpoint-manager'
      - 'scripts/postgres-endpoint-manager.py'
      - '.github/workflows/build-and-push-pg-manager.yml'

env:
  REGISTRY: quay.io
  IMAGE_NAME: wire/postgres-endpoint-manager

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.postgres-endpoint-manager
          platforms: linux/amd64,linux/arm64
          push: false  # Build locally first
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=pg-manager
          cache-to: type=gha,mode=max,scope=pg-manager
          load: true  # Load image locally for testing

      - name: Test image
        run: |
          # Get the first tag from metadata output
          TEST_TAG=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          echo "Testing image: $TEST_TAG"

          # Test basic tools
          docker run --rm --platform linux/amd64 --entrypoint /bin/bash $TEST_TAG -c "
            echo 'Testing PostgreSQL endpoint manager...' &&
            python3 --version &&
            psql --version &&
            which curl &&
            which jq &&
            echo 'PostgreSQL endpoint manager ready!'
          "

          # Test functionality
          echo 'Testing functionality...'
          docker run --rm --platform linux/amd64 $TEST_TAG --test

      - name: Push Docker image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.postgres-endpoint-manager
          platforms: linux/amd64,linux/arm64
          push: true  # Push after successful tests
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=pg-manager

      - name: Image summary
        run: |
          echo "âœ… Built and tested PostgreSQL Endpoint Manager:"
          echo "${{ steps.meta.outputs.tags }}" | while read tag; do
            echo "  ðŸ“¦ $tag"
          done
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            echo "ðŸš€ Images pushed to registry"
          else
            echo "ðŸ§ª PR build - images not pushed"
          fi